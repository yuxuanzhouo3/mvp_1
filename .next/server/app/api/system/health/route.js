"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/system/health/route";
exports.ids = ["app/api/system/health/route"];
exports.modules = {

/***/ "@upstash/redis":
/*!*********************************!*\
  !*** external "@upstash/redis" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@upstash/redis");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsystem%2Fhealth%2Froute&page=%2Fapi%2Fsystem%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsystem%2Fhealth%2Froute.ts&appDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsystem%2Fhealth%2Froute&page=%2Fapi%2Fsystem%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsystem%2Fhealth%2Froute.ts&appDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_mac_guest1_Downloads_Git_mvp_projects_mvp_1_app_api_system_health_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/system/health/route.ts */ \"(rsc)/./app/api/system/health/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/system/health/route\",\n        pathname: \"/api/system/health\",\n        filename: \"route\",\n        bundlePath: \"app/api/system/health/route\"\n    },\n    resolvedPagePath: \"/Users/mac-guest1/Downloads/Git/mvp_projects/mvp_1/app/api/system/health/route.ts\",\n    nextConfigOutput,\n    userland: _Users_mac_guest1_Downloads_Git_mvp_projects_mvp_1_app_api_system_health_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/system/health/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzeXN0ZW0lMkZoZWFsdGglMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN5c3RlbSUyRmhlYWx0aCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN5c3RlbSUyRmhlYWx0aCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm1hYy1ndWVzdDElMkZEb3dubG9hZHMlMkZHaXQlMkZtdnBfcHJvamVjdHMlMkZtdnBfMSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZtYWMtZ3Vlc3QxJTJGRG93bmxvYWRzJTJGR2l0JTJGbXZwX3Byb2plY3RzJTJGbXZwXzEmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9c3RhbmRhbG9uZSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2lDO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsdUdBQXVHO0FBQy9HO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDNko7O0FBRTdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGVyc29uYWxpbmsvPzk3N2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL21hYy1ndWVzdDEvRG93bmxvYWRzL0dpdC9tdnBfcHJvamVjdHMvbXZwXzEvYXBwL2FwaS9zeXN0ZW0vaGVhbHRoL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvc3lzdGVtL2hlYWx0aC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N5c3RlbS9oZWFsdGhcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3N5c3RlbS9oZWFsdGgvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvbWFjLWd1ZXN0MS9Eb3dubG9hZHMvR2l0L212cF9wcm9qZWN0cy9tdnBfMS9hcHAvYXBpL3N5c3RlbS9oZWFsdGgvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvc3lzdGVtL2hlYWx0aC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsystem%2Fhealth%2Froute&page=%2Fapi%2Fsystem%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsystem%2Fhealth%2Froute.ts&appDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/system/health/route.ts":
/*!****************************************!*\
  !*** ./app/api/system/health/route.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n\nasync function GET(request) {\n    const startTime = Date.now();\n    try {\n        // Check if we're in mock mode\n        const isMockMode = \"https://bamratexknmqvdbalzen.supabase.co\" === \"https://mock.supabase.co\";\n        if (isMockMode) {\n            // Return mock system health data\n            const mockHealth = {\n                timestamp: new Date().toISOString(),\n                environment: \"development\" || 0,\n                mode: \"mock\",\n                database: {\n                    status: \"healthy\",\n                    response_time: 50,\n                    active_connections: 1,\n                    queue_size: 0,\n                    error_rate: 0,\n                    last_check: new Date().toISOString()\n                },\n                api_modules: {\n                    auth: {\n                        last_24h_requests: 1250,\n                        last_24h_errors: 2,\n                        success_rate: 99.84,\n                        avg_response_time: 145,\n                        last_error: \"Invalid credentials\",\n                        last_error_time: new Date(Date.now() - 3600000).toISOString()\n                    },\n                    pay: {\n                        last_24h_requests: 89,\n                        last_24h_errors: 0,\n                        success_rate: 100.0,\n                        avg_response_time: 234\n                    },\n                    chat: {\n                        last_24h_requests: 3420,\n                        last_24h_errors: 12,\n                        success_rate: 99.65,\n                        avg_response_time: 89,\n                        last_error: \"Message delivery failed\",\n                        last_error_time: new Date(Date.now() - 1800000).toISOString()\n                    },\n                    match: {\n                        last_24h_requests: 567,\n                        last_24h_errors: 3,\n                        success_rate: 99.47,\n                        avg_response_time: 312,\n                        last_error: \"Matching algorithm timeout\",\n                        last_error_time: new Date(Date.now() - 7200000).toISOString()\n                    }\n                },\n                circuit_breakers: {\n                    total_breakers: 4,\n                    open_breakers: 0,\n                    half_open_breakers: 0,\n                    closed_breakers: 4,\n                    details: {\n                        auth: {\n                            state: \"closed\",\n                            failureCount: 0\n                        },\n                        database: {\n                            state: \"closed\",\n                            failureCount: 0\n                        },\n                        payment: {\n                            state: \"closed\",\n                            failureCount: 0\n                        },\n                        matching: {\n                            state: \"closed\",\n                            failureCount: 0\n                        }\n                    }\n                },\n                redis: {\n                    status: \"connected\",\n                    response_time: 25,\n                    memory_usage: 1024,\n                    connected_clients: 1\n                },\n                overall_status: \"healthy\",\n                response_time: Date.now() - startTime\n            };\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(mockHealth);\n        }\n        // Real system health check (import modules dynamically to avoid issues)\n        const { db, initializeDatabase } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@supabase\"), __webpack_require__.e(\"vendor-chunks/tr46\"), __webpack_require__.e(\"vendor-chunks/ws\"), __webpack_require__.e(\"vendor-chunks/whatwg-url\"), __webpack_require__.e(\"vendor-chunks/isows\"), __webpack_require__.e(\"_rsc_lib_db_ts\")]).then(__webpack_require__.bind(__webpack_require__, /*! @/lib/db */ \"(rsc)/./lib/db.ts\"));\n        const { circuitBreakerManager } = await __webpack_require__.e(/*! import() */ \"_rsc_lib_utils_circuitBreaker_ts\").then(__webpack_require__.bind(__webpack_require__, /*! @/lib/utils/circuitBreaker */ \"(rsc)/./lib/utils/circuitBreaker.ts\"));\n        // Ensure database is initialized\n        if (!db.getStats) {\n            initializeDatabase();\n        }\n        const health = {\n            timestamp: new Date().toISOString(),\n            environment: \"development\" || 0,\n            mode: \"real\",\n            database: await getDatabaseHealth(db),\n            api_modules: await getApiModulesHealth(),\n            circuit_breakers: getCircuitBreakersHealth(circuitBreakerManager),\n            redis: await getRedisHealth(),\n            overall_status: \"healthy\"\n        };\n        // Calculate overall status\n        health.overall_status = calculateOverallStatus(health);\n        const responseTime = Date.now() - startTime;\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            ...health,\n            response_time: responseTime\n        });\n    } catch (error) {\n        console.error(\"Health check failed:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            timestamp: new Date().toISOString(),\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Unknown error\",\n            response_time: Date.now() - startTime,\n            mode: \"error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function getDatabaseHealth(db) {\n    try {\n        // Check if database is properly initialized\n        if (!db || !db.getStats || !db.getHealthStatus) {\n            return {\n                status: \"unhealthy\",\n                response_time: 0,\n                active_connections: 0,\n                queue_size: 0,\n                error_rate: 1,\n                last_check: new Date().toISOString(),\n                error: \"Database not properly initialized\"\n            };\n        }\n        const dbStats = db.getStats();\n        const healthStatus = db.getHealthStatus();\n        return {\n            status: healthStatus.status,\n            response_time: healthStatus.responseTime,\n            active_connections: healthStatus.activeConnections,\n            queue_size: healthStatus.queueSize,\n            error_rate: healthStatus.errorCount / Math.max(healthStatus.successCount + healthStatus.errorCount, 1),\n            last_check: healthStatus.lastCheck.toISOString()\n        };\n    } catch (error) {\n        return {\n            status: \"unhealthy\",\n            response_time: 0,\n            active_connections: 0,\n            queue_size: 0,\n            error_rate: 1,\n            last_check: new Date().toISOString(),\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\nasync function getApiModulesHealth() {\n    // Mock data for now\n    return {\n        auth: {\n            last_24h_requests: 1250,\n            last_24h_errors: 2,\n            success_rate: 99.84,\n            avg_response_time: 145,\n            last_error: \"Invalid credentials\",\n            last_error_time: new Date(Date.now() - 3600000).toISOString()\n        },\n        pay: {\n            last_24h_requests: 89,\n            last_24h_errors: 0,\n            success_rate: 100.0,\n            avg_response_time: 234\n        },\n        chat: {\n            last_24h_requests: 3420,\n            last_24h_errors: 12,\n            success_rate: 99.65,\n            avg_response_time: 89,\n            last_error: \"Message delivery failed\",\n            last_error_time: new Date(Date.now() - 1800000).toISOString()\n        },\n        match: {\n            last_24h_requests: 567,\n            last_24h_errors: 3,\n            success_rate: 99.47,\n            avg_response_time: 312,\n            last_error: \"Matching algorithm timeout\",\n            last_error_time: new Date(Date.now() - 7200000).toISOString()\n        }\n    };\n}\nfunction getCircuitBreakersHealth(circuitBreakerManager) {\n    try {\n        const status = circuitBreakerManager.getStatus();\n        const breakers = Object.values(status);\n        return {\n            total_breakers: breakers.length,\n            open_breakers: breakers.filter((b)=>b.state === \"open\").length,\n            half_open_breakers: breakers.filter((b)=>b.state === \"half-open\").length,\n            closed_breakers: breakers.filter((b)=>b.state === \"closed\").length,\n            details: status\n        };\n    } catch (error) {\n        return {\n            total_breakers: 0,\n            open_breakers: 0,\n            half_open_breakers: 0,\n            closed_breakers: 0,\n            details: {}\n        };\n    }\n}\nasync function getRedisHealth() {\n    try {\n        const url = process.env.UPSTASH_REDIS_URL?.trim();\n        const token = process.env.UPSTASH_REDIS_TOKEN?.trim();\n        if (!url || !token) {\n            return {\n                status: \"disconnected\",\n                response_time: 0,\n                memory_usage: 0,\n                connected_clients: 0,\n                last_error: \"Missing Redis environment variables\"\n            };\n        }\n        const { Redis } = __webpack_require__(/*! @upstash/redis */ \"@upstash/redis\");\n        const redis = new Redis({\n            url,\n            token\n        });\n        const startTime = Date.now();\n        await redis.set(\"health_check\", \"ok\", {\n            ex: 60\n        });\n        const responseTime = Date.now() - startTime;\n        return {\n            status: \"connected\",\n            response_time: responseTime,\n            memory_usage: 1024,\n            connected_clients: 1\n        };\n    } catch (error) {\n        return {\n            status: \"error\",\n            response_time: 0,\n            memory_usage: 0,\n            connected_clients: 0,\n            last_error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\nfunction calculateOverallStatus(health) {\n    const issues = [];\n    // Check database status\n    if (health.database.status === \"unhealthy\") issues.push(\"database_unhealthy\");\n    if (health.database.error_rate > 0.1) issues.push(\"database_high_error_rate\");\n    // Check API modules\n    Object.entries(health.api_modules).forEach(([module, metrics])=>{\n        if (metrics.success_rate < 95) issues.push(`${module}_low_success_rate`);\n    });\n    // Check circuit breakers\n    if (health.circuit_breakers.open_breakers > 0) issues.push(\"circuit_breakers_open\");\n    // Check Redis\n    if (health.redis.status === \"error\") issues.push(\"redis_error\");\n    if (issues.length === 0) return \"healthy\";\n    if (issues.length <= 2) return \"degraded\";\n    return \"unhealthy\";\n}\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { action } = body;\n        switch(action){\n            case \"reset_circuit_breakers\":\n                // This action is not directly applicable in mock mode,\n                // but for consistency, we can return a success message.\n                // In a real scenario, you'd need to import the manager.\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    status: \"success\",\n                    message: \"Circuit breakers reset (mock mode)\"\n                });\n            case \"force_close_circuit_breakers\":\n                // This action is not directly applicable in mock mode,\n                // but for consistency, we can return a success message.\n                // In a real scenario, you'd need to import the manager.\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    status: \"success\",\n                    message: \"Circuit breakers forced closed (mock mode)\"\n                });\n            case \"reset_database_connection\":\n                // This action is not directly applicable in mock mode,\n                // but for consistency, we can return a success message.\n                // In a real scenario, you'd need to import the db module.\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    status: \"success\",\n                    message: \"Database connection reset (mock mode)\"\n                });\n            case \"clear_redis_cache\":\n                // This action is not directly applicable in mock mode,\n                // but for consistency, we can return a success message.\n                // In a real scenario, you'd need to import the Redis client.\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    status: \"success\",\n                    message: \"Redis cache cleared (mock mode)\"\n                });\n            default:\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    status: \"error\",\n                    message: \"Invalid action\"\n                }, {\n                    status: 400\n                });\n        }\n    } catch (error) {\n        console.error(\"Health POST error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            status: \"error\",\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/system/health/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsystem%2Fhealth%2Froute&page=%2Fapi%2Fsystem%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsystem%2Fhealth%2Froute.ts&appDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmac-guest1%2FDownloads%2FGit%2Fmvp_projects%2Fmvp_1&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();